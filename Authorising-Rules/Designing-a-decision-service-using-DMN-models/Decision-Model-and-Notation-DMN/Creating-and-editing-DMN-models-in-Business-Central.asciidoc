[id='ds-dmn-model-creating-proc_{context}']
= Creating and editing DMN models in {CENTRAL}

You can use the DMN designer in {CENTRAL} to design DMN decision requirements diagrams (DRDs) and define decision logic for a complete and functional DMN decision model. {PRODUCT} provides design and runtime support for DMN 1.2 models at conformance level 3, and includes enhancements and fixes to FEEL and DMN model components to optimize the experience of implementing DMN decision services with {PRODUCT}.

.Procedure
. In {CENTRAL}, go to *Menu* -> *Design* -> *Projects* and click the project name.
. Create or import a DMN file in your {CENTRAL} project.
+
--
To create a DMN file, click *Add Asset* -> *DMN*, enter an informative DMN model name, select the appropriate *Package*, and click *Ok*.

To import an existing DMN file, click *Import Asset*, enter the DMN model name, select the appropriate *Package*, select the DMN file to upload, and click *Ok*.

The new DMN file is now listed in the *DMN* panel of the *Project Explorer*, and the DMN decision requirements diagram (DRD) canvas appears.

NOTE: If you imported a DMN file that does not contain layout information, the imported decision requirements diagram (DRD) is formatted automatically in the DMN designer. Click *Save* in the DMN designer to save the DRD layout.

--
. Begin adding components to your new or imported DMN decision requirements diagram (DRD) by clicking and dragging one of the DMN nodes from the left toolbar:
+
--
.Adding DRD components
image::dmn/dmn-drag-decision-node.png[]

The following DRD components are available:

* *Decision*: Use this node for a DMN decision, where one or more input elements determine an output based on defined decision logic.
* *Business knowledge model*: Use this node for reusable functions with one or more decision elements. Decisions that have the same logic but depend on different sub-input data or sub-decisions use business knowledge models to determine which procedure to follow.
* *Knowledge source*: Use this node for external authorities, documents, committees, or policies that regulate a decision or business knowledge model. Knowledge sources are references to real-world factors rather than executable business rules.
* *Input data*: Use this node for information used in a decision node or a business knowledge model. Input data usually includes business-level concepts or objects relevant to the business, such as loan applicant data used in a lending strategy.
* *Text annotation*: Use this node for explanatory notes associated with an input data node, decision node, business knowledge model, or knowledge source.
* *Decision service*: Use this node to enclose a set of reusable decisions implemented as a decision service for invocation. A decision service can be used in other DMN models and can be invoked from an external application or a BPMN business process.

--
. In the DMN designer canvas, double-click the new DRD node to enter an informative node name.
. If the node is a decision or business knowledge model, select the node to display the node options and click the *Edit* icon to open the DMN boxed expression designer to define the decision logic for the node:
+
--
.Opening a new decision node boxed expression
image::dmn/dmn-decision-edit.png[]

.Opening a new business knowledge model boxed expression
image::dmn/dmn-bkm-edit.png[]

By default, all business knowledge models are defined as boxed function expressions containing a literal FEEL expression, a nested context expression of an external JAVA or PMML function, or a nested boxed expression of any type.

For decision nodes, you click the undefined table to select the type of boxed expression you want to use, such as a boxed literal expression, boxed context expression, decision table, or other DMN boxed expression.

.Selecting the logic type for a decision node
image::dmn/dmn-decision-boxed-expression-options.png[]

For business knowledge models, you click the top-left function cell to select the function type, or right-click the function value cell, select *Clear*, and select a boxed expression of another type.

.Selecting the function or other logic type for a business knowledge model
image::dmn/dmn-bkm-define.png[]
--
. In the selected boxed expression designer for either a decision node (any expression type) or business knowledge model (function expression), click the applicable table cells to define the table name, variable data types, variable names and values, function parameters and bindings, or FEEL expressions to include in the decision logic.
+
--
You can right-click cells for additional actions where applicable, such as inserting or removing table rows and columns or clearing table contents.

The following is an example decision table for a decision node that determines credit score ratings based on a defined range of a loan applicant's credit score:

.Decision node decision table for credit score rating
image::dmn/dmn-decision-table-example1a.png[]

The following is an example boxed function expression for a business knowledge model that calculates mortgage payments based on principal, interest, taxes, and insurance (PITI) as a literal expression:

.Business knowledge model function for PITI calculation
image::dmn/dmn-function-expression-example4.png[]
////
NOTE: This PITI calculation logic can also be expressed as a boxed literal expression outside of a business knowledge model, but because business knowledge models are defined as function expressions, this expression becomes a function in this case. This requirement applies to any expression types that you use in business knowledge models.

For more details about the types of boxed expressions, see xref:ds-dmn-boxed-expressions-con_dmn-models[].

For more details about defining decision logic in boxed expressions, see xref:ds-dmn-defining-logic-proc_dmn-models[].
////
--
. After you define the decision logic for the selected node, click *Back to "<MODEL_NAME>"* to return to the DRD view.
. For the selected DRD node, use the available connection options to create and connect to the next node in the DRD, or click and drag a new node onto the DRD canvas from the left toolbar.
+
--
The node type determines which connection options are supported. For example, an *Input data* node can connect to a decision node, knowledge source, or text annotation using the applicable connection type, whereas a *Knowledge source* node can connect to any DRD element. A *Decision* node can connect only to another decision or a text annotation.

The following connection types are available, depending on the node type:

* *Information requirement*: Use this connection from an input data node or decision node to another decision node that requires the information.
* *Knowledge requirement*: Use this connection from a business knowledge model to a decision node or to another business knowledge model that invokes the decision logic.
* *Authority requirement*: Use this connection from an input data node or a decision node to a dependent knowledge source or from a knowledge source to a decision node, business knowledge model, or another knowledge source.
* *Association*: Use this connection from an input data node, decision node, business knowledge model, or knowledge source to a text annotation.
////
For more details about DRD components and connector rules, see xref:ds-dmn-drd-components-ref_dmn-models[].
////

.Connecting credit score input to the credit score rating decision
image::dmn/dmn-input-connection-example.png[]

image::dmn/dmn-input-connection-example2.png[]
--
. Continue adding and defining the remaining DRD components of your decision model. Periodically click *Save* in the DMN designer to save your work.
. After you add and define all components of the DRD, click *Save* to save and validate the completed DRD.
//and click the *Play* icon (image:dmn/dmn-play-icon.png[]) in the upper-right toolbar to verify the decision flow. [Disabled for now. Stetson, 26 Nov 2018]
+
--
The following is an example DRD for a loan prequalification decision model:

.Completed DRD for loan prequalification
image::dmn/dmn-example-drd.png[]

The following is an example DRD for a phone call handling decision model using a reusable decision service:

.Completed DRD for phone call handling with a decision service
image::dmn/dmn-example-drd3.png[width=90%]

In a DMN decision service node, the decision nodes in the bottom segment incorporate input data from outside of the decision service to arrive at a final decision in the top segment of the decision service node. The resulting top-level decisions from the decision service are then implemented in any subsequent decisions or business knowledge requirements of the DMN model. You can reuse DMN decision services in other DMN models to apply the same decision logic with different input data and different outgoing connections.
--

[id='ds-dmn-logic-defining-proc_{context}']
= Defining DMN decision logic in boxed expressions in {CENTRAL}

Boxed expressions in DMN are tables that you use to define the underlying logic of decision nodes and business knowledge models in a decision requirements diagram (DRD) or decision requirements graph (DRG). Some boxed expressions can contain other boxed expressions, but the top-level boxed expression corresponds to the decision logic of a single DRD artifact. While DRDs with one or more DRGs represent the flow of a DMN decision model, boxed expressions define the actual decision logic of individual nodes. DRDs and boxed expressions together form a complete and functional DMN decision model.

You can use the DMN designer in {CENTRAL} to define decision logic for your DRD components using built-in boxed expressions.

.Prerequisites
* You have created or imported a DMN file in {CENTRAL}.

.Procedure
. In {CENTRAL}, go to *Menu* -> *Design* -> *Projects*, click the project name, and select the DMN file you want to modify.
. In the DMN designer canvas, select a decision node or business knowledge model that you want to define and click the *Edit* icon to open the DMN boxed expression designer:
+
--
.Opening a new decision node boxed expression
image::dmn/dmn-decision-edit.png[]

.Opening a new business knowledge model boxed expression
image::dmn/dmn-bkm-edit.png[]

By default, all business knowledge models are defined as boxed function expressions containing a literal FEEL expression, a nested context expression of an external JAVA or PMML function, or a nested boxed expression of any type.

For decision nodes, you click the undefined table to select the type of boxed expression you want to use, such as a boxed literal expression, boxed context expression, decision table, or other DMN boxed expression.

.Selecting the logic type for a decision node
image::dmn/dmn-decision-boxed-expression-options.png[]

For business knowledge models, you click the top-left function cell to select the function type, or right-click the function value cell, select *Clear*, and select a boxed expression of another type.

.Selecting the function or other logic type for a business knowledge model
image::dmn/dmn-bkm-define.png[]
--
. For this example, use a decision node and select *Decision Table* as the boxed expression type.
+
A decision table in DMN is a visual representation of one or more rules in a tabular format. Each rule consists of a single row in the table, and includes columns that define the conditions (input) and outcome (output) for that particular row.
. Click the input column header to define the name and data type for the input condition. For example, name the input column *Credit Score.FICO* with a `number` data type. This column specifies numeric credit score values or ranges of loan applicants.
. Click the output column header to define the name and data type for the output values. For example, name the output column *Credit Score Rating* and next to the *Data Type* option, click *Manage* to go to the *Data Types* page where you can create a custom data type with score ratings as constraints.
+
.Managing data types for a column header value
image::dmn/dmn-manage-data-types.png[]

. On the *Data Types* page, click *Add* and create a *Credit_Score_Rating* data type as a `string`:
+
.Adding a new data type
image::dmn/dmn-custom-data-type-add.png[]

. Click *Constraints*, select *Enumeration* from the drop-down options, and add the following constraints:
+
--
* `"Excellent"`
* `"Good"`
* `"Fair"`
* `"Poor"`
* `"Bad"`

.Adding constraints to the new data type
image::dmn/dmn-custom-data-type-constraints.png[]

For information about constraint types and syntax requirements for the specified data type, see the https://www.omg.org/spec/DMN[Decision Model and Notation specification].
--

. Click *OK* to save the constraints and click *Save* to save the data type.
. Return to the *Credit Score Rating* decision table, click the *Credit Score Rating* column header, and set the data type to this new custom data type.
. Use the *Credit Score.FICO* input column to define credit score values or ranges of values, and use the *Credit Score Rating* column to specify one of the corresponding ratings you defined in the *Credit_Score_Rating* data type.
+
Right-click any value cell to insert or delete rows (rules) or columns (clauses).
+
.Decision node decision table for credit score rating
image::dmn/dmn-decision-table-example1a.png[]

. After you define all rules, click the top-left corner of the decision table to define the rule *Hit Policy* and *Builtin Aggregator* (for *COLLECT* hit policy only).
+
--
The hit policy determines how to reach an outcome when multiple rules in a decision table match the provided input values. The built-in aggregator determines how to aggregate rule values when you use the *COLLECT* hit policy.

.Defining the decision table hit policy
image::dmn/dmn-hit-policies.png[]

The following example is a more complex decision table that determines applicant qualification for a loan as the concluding decision node in the same loan prequalification decision model:

.Decision table for loan prequalification
image::dmn/dmn-decision-table-example3.png[]
--

For boxed expression types other than decision tables, you follow these guidelines similarly to navigate the boxed expression tables and define variables and parameters for decision logic, but according to the requirements of the boxed expression type. Some boxed expressions, such as boxed literal expressions, can be single-column tables, while other boxed expressions, such as function, context, and invocation expressions, can be multi-column tables with nested boxed expressions of other types.

For example, the following boxed context expression defines the parameters that determine whether a loan applicant can meet minimum mortgage payments based on principal, interest, taxes, and insurance (PITI), represented as a front-end ratio calculation with a sub-context expression:

.Boxed context expression for front-end client PITI ratio
image::dmn/dmn-context-expression-example2.png[]

The following boxed function expression determines a monthly mortgage installment as a business knowledge model in a lending decision, with the function value defined as a nested context expression:

.Boxed function expression for installment calculation in business knowledge model
image::dmn/dmn-function-expression-example3.png[]

For more information and examples of each boxed expression type, see xref:ds-dmn-boxed-expressions-con_dmn-models[].

[id='ds-dmn-data-types-defining-proc_{context}']
= Creating custom data types for DMN boxed expressions in {CENTRAL}

In DMN boxed expressions in {CENTRAL}, data types determine the structure of the data that you use within an associated table, column, or field in the boxed expression. You can use default DMN data types (such as String, Number, Boolean) or you can create custom data types to specify additional fields and constraints that you want to implement for the boxed expression values.

Custom data types that you create for a boxed expression can be simple or structured:

* *Simple* data types have only a name and a type assignment. Example: `Age (number)`.
* *Structured* data types contain multiple fields associated with a parent data type. Example: A single type `Person` containing the fields `Name (string)`, `Age (number)`, `Email (string)`.

.Prerequisites
* You have created or imported a DMN file in {CENTRAL}.

.Procedure
. In {CENTRAL}, go to *Menu* -> *Design* -> *Projects*, click the project name, and select the DMN file you want to modify.
. In the DMN designer canvas, select a decision node or business knowledge model for which you want to define the data types and click the *Edit* icon to open the DMN boxed expression designer.
. If the boxed expression is for a decision node that is not yet defined, click the undefined table to select the type of boxed expression you want to use, such as a boxed literal expression, boxed context expression, decision table, or other DMN boxed expression.
+
.Selecting the logic type for a decision node
image::dmn/dmn-decision-boxed-expression-options.png[]

. Click the cell for the table header, column header, or parameter field (depending on the boxed expression type) for which you want to define the data type and click *Manage* to go to the *Data Types* page where you can create a custom data type.
+
--
.Managing data types for a column header value
image::dmn/dmn-manage-data-types.png[]

You can also set and manage custom data types for a specified decision node or business knowledge model node by selecting the *Diagram properties* icon in the upper-right corner of the DMN designer:

.Managing data types in diagram properties
image::dmn/dmn-manage-data-types1a.png[]

The data type that you define for a specified cell in a boxed expression determines the structure of the data that you use within that associated table, column, or field in the boxed expression.

In this example, an output column *Credit Score Rating* for a DMN decision table defines a set of custom credit score ratings based on an applicant's credit score.
--
. On the *Data Types* page, click *Add* and create a *Credit_Score_Rating* data type as a `string`:
+
--
.Adding a new data type
image::dmn/dmn-custom-data-type-add.png[]

If the data type requires a list of items, enable the *List* setting.
--
. Click *Constraints*, select *Enumeration* from the drop-down options, and add the following constraints:
+
--
* `"Excellent"`
* `"Good"`
* `"Fair"`
* `"Poor"`
* `"Bad"`

.Adding constraints to the new data type
image::dmn/dmn-custom-data-type-constraints.png[]

For information about constraint types and syntax requirements for the specified data type, see the https://www.omg.org/spec/DMN[Decision Model and Notation specification].
--

. Click *OK* to save the constraints and click *Save* to save the data type.

. Return to the *Credit Score Rating* decision table, click the *Credit Score Rating* column header, set the data type to this new custom data type, and define the rule values for that column with the rating constraints that you specified.
+
--
.Decision table for credit score rating
image::dmn/dmn-decision-table-example1a.png[]

In the DMN decision model for this scenario, the *Credit Score Rating* decision flows into the following *Loan Prequalification* decision that also requires custom data types:

.Decision table for loan prequalification
image::dmn/dmn-manage-data-types-blank.png[]
--
. Continuing with this example, return to the *Data Types* window, click *Add*, and create a *Loan_Qualification* data type as a `Structure` with no constraints.
+
--
When you save the new structured data type, the first sub-field appears so that you can begin defining nested data fields in this parent data type. You can use these sub-fields in association with the parent structured data type in boxed expressions, such as nested column headers in decision tables or nested table parameters in context or function expressions.

For additional sub-fields, next to the *Loan_Qualification* data type, select the settings icon (three vertical dots) and select *Insert nested field*:

.Adding a new structured data type with nested fields
image::dmn/dmn-manage-data-types-structured.png[]
--
. For this example, under the structured *Loan_Qualification* data type, add a *Qualification* field with `"Qualified"` and `"Not Qualified"` enumeration constraints, and a *Reason* field with no constraints. Add also a simple *Back_End_Ratio* and a *Front_End_Ratio* data type, both with `"Sufficient"` and `"Insufficient"` enumeration constraints.
+
--
Click *Save* for each data type that you create.

.Adding nested data types with constraints
image::dmn/dmn-manage-data-types-structured2.png[]
--
. Return to the decision table and, for each column, click the column header cell, set the data type to the new corresponding custom data type, and define the rule values as needed for the column with the constraints that you specified, if applicable.
+
.Decision table for loan prequalification
image::dmn/dmn-decision-table-example3.png[]

For boxed expression types other than decision tables, you follow these guidelines similarly to navigate the boxed expression tables and define custom data types as needed.

For example, the following boxed function expression uses custom `tCandidate` and `tProfile` structured data types to associate data for online dating compatibility:

.Boxed function expression for online dating compatibility
image::dmn/dmn-manage-data-types-structured3.png[]

.Custom data type definitions for online dating compatibility
image::dmn/dmn-manage-data-types-structured3a.png[]

.Parameter definitions with custom data types for online dating compatibility
image::dmn/dmn-manage-data-types-structured3b.png[]

[id='ds-dmn-included-models-proc_{context}']
= Including other DMN models within a DMN file in {CENTRAL}

In {CENTRAL}, you can include other DMN models from your project in a specified DMN file so that you can reuse the decision requirements diagram (DRD) components of the included models in that DMN file. When you include a DMN model within another DMN file, you can use all of the nodes and logic from both models in the same DRD, but you cannot edit the nodes from the included model. To edit nodes from included models, you must update the source file for the included model directly. All changes to the source of the included model are automatically applied across DMN files that include that model.

You cannot include DMN models from other projects in {CENTRAL}.

.Prerequisites
* You have created or imported the DMN models in the same project in {CENTRAL} as the DMN file in which you want to include the models.

.Procedure
. In {CENTRAL}, go to *Menu* -> *Design* -> *Projects*, click the project name, and select the DMN file you want to modify.
. In the DMN designer, click the *Included Models* tab.
. Click *Include Model*, select a DMN model from your project in the *DMN models* list, enter a unique name for the included model, and click *Include*:
+
--
.Including a DMN model
image::dmn/dmn-include-model.png[]

The DMN model is added to this DMN file, and all DRD nodes from the included model are listed under *Decision Components* in the *Decision Navigator* view:

.DMN file with decision components from the included DMN model
image::dmn/dmn-include-model-list.png[]

All data types from the included model are also listed in the *Data Types* tab for the DMN file:

.DMN file with data types from the included DMN model
image::dmn/dmn-include-model-data-types.png[]
--
. In the *Model* tab of the DMN designer, click and drag the included DRD components onto the canvas to begin implementing them in your DRD:
+
--
.Adding DRD components from the included DMN model
image::dmn/dmn-include-model-drd.png[]

To edit DRD nodes or data types from included models, you must update the source file for the included model directly. All changes to the source of the included model are automatically applied across DMN files that include that model.

To edit the included model name or to remove the included model from the DMN file, use the *Included Models* tab in the DMN designer.

IMPORTANT: When you remove an included model, any nodes from that included model that are currently used in the DRD are also removed.
--

[id='ds-dmn-designer-nav-ref_{context}']
= DMN designer navigation and properties in {CENTRAL}

The DMN designer in {CENTRAL} provides the following additional features to help you navigate through the components and properties of decision requirements diagrams (DRDs).

DMN file and diagram views::
In the upper-left corner of the DMN designer, select the *Project Explorer* view to navigate between all DMN and other files or select the *Decision Navigator* view to navigate between the decision components, graphs, and boxed expressions of a selected DRD:
+
--
.Project Explorer view
image::dmn/dmn-designer-project-view.png[]

.Decision Navigator view
image::dmn/dmn-designer-nav-view.png[]

image::dmn/dmn-designer-nav-view2.png[]

NOTE: The DRD components from any DMN models included in the DMN file (in the *Included Models* tab) are also listed in the *Decision Components* panel for the DMN file.

In the upper-right corner of the DMN designer, select the *Explore diagram* icon to view an elevated preview of the selected DRD and to navigate between the nodes of the selected DRD:

.Explore diagram view
image::dmn/dmn-designer-preview.png[]
--

DRD properties and design::
In the upper-right corner of the DMN designer, select the *Diagram properties* icon to modify the identifying information, data types, and appearance of a selected DRD, DRD node, or boxed expression cell:
+
--
.DRD node properties
image::dmn/dmn-designer-properties.png[]

To view the properties of the entire DRD, click the DRD canvas background instead of a specific node.
--

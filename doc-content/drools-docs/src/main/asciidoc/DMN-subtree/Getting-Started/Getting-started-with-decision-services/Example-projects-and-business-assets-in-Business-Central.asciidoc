[id='decision-examples-central-con_{context}']

= Example projects and business assets in {CENTRAL}

{CENTRAL} contains example projects with example business assets that you can use as a reference for the
ifdef::DM,DROOLS[]
rules or other assets
endif::[]
ifdef::PAM,JBPM[]
rules, processes, or other assets
endif::[]
that you create in your own {PRODUCT} projects. Each sample project is designed differently to demonstrate
ifdef::DM,DROOLS[]
decision management or business optimization
endif::[]
ifdef::PAM,JBPM[]
process automation, decision management, or business optimization
endif::[]
assets and logic in {PRODUCT}.

NOTE: Red Hat does not provide support for the example code included in the {PRODUCT} distribution.

The following example projects are available in {CENTRAL}:

ifdef::PAM,JBPM[]
* *Evaluation_Process*: (Process automation) Example evaluation process using business process assets. Evaluates employees based on performance.
* *Mortgage_Process*: (Process automation) Example loan approval process using business process and decision assets. Determines loan eligibility based on applicant data and qualifications.
* *IT_Orders*: (Process automation and case management) Example ordering case using business process and case management assets. Places an IT hardware order based on needs and approvals.
//* *Traffic Violation*: (Process Automation) Example traffic violations process using business process and DMN assets. Determines the traffic violation type and calculates the fine based on the violation type.
endif::[]
* *Traffic_Violation*: (Decision management with DMN) Example traffic violation decision service using a Decision Model and Notation (DMN) model. Determines driver penalty and suspension based on traffic violations.
* *Mortgages*: (Decision management with rules) Example loan approval process using rule-based decision assets. Determines loan eligibility based on applicant data and qualifications.
* *Employee_Rostering*: (Business optimization) Example employee rostering optimization using decision and solver assets. Assigns employees to shifts based on skills.
* *OptaCloud*: (Business optimization) Example resource allocation optimization using decision and solver assets. Assigns processes to computers with limited resources.
* *Course_Scheduling*: (Business optimization) Example course scheduling and curriculum decision process. Assigns lectures to rooms and determines a student's curriculum based on factors, such as course conflicts and class room capacity.
* *Dinner_Party*: (Business optimization) Guest seating optimization using guided decision tables. Assigns guest seating based on each guest's job type, political beliefs, and known relationships.

[id='decision-examples-central-proc_{context}']

= Accessing example projects and business assets in {CENTRAL}

You can use the example projects in {CENTRAL} to explore example business assets as a reference for the rules or other assets that you create in your own {PRODUCT} projects.

.Prerequisites
* {CENTRAL} is installed and running. For installation options, see {URL_PLANNING_INSTALL}[_{PLANNING_INSTALL}_].

.Procedure
. In {CENTRAL}, go to *Menu* -> *Design* -> *Projects* and click *Try Samples*.
+
If a project already exists, click the three vertical dots in the upper-right corner of the *Projects* page and click *Try Samples*.
. Review the descriptions for each sample project to determine which project you want to explore. Each sample project is designed differently to demonstrate
ifdef::DM,DROOLS,OP[]
decision management or business optimization
endif::[]
ifdef::PAM,JBPM[]
process automation, decision management, or business optimization
endif::[]
assets and logic in {PRODUCT}.
. Select one or more sample projects and click *Ok* to add the projects to your space.
. In the *Projects* page of your space, select one of the new example projects to view the example assets for that project.
. Select each example asset to explore how the project is designed to achieve the specified goal or workflow.
. In the upper-right corner of the project *Assets* page, click *Build* to build the sample project or *Deploy* to build the project and then deploy it to {KIE_SERVER}.
+
--
[NOTE]
====
You can also select the *Build & Install* option to build the project and publish the KJAR file to the configured Maven repository without deploying to a {KIE_SERVER}. In a development environment, you can click *Deploy* to deploy the built KJAR file to a {KIE_SERVER} without stopping any running instances (if applicable), or click *Redeploy* to deploy the built KJAR file and replace all instances. The next time you deploy or redeploy the built KJAR, the previous deployment unit (KIE container) is automatically updated in the same target {KIE_SERVER}. In a production environment, the *Redeploy* option is disabled and you can click *Deploy* only to deploy the built KJAR file to a new deployment unit (KIE container) on a {KIE_SERVER}.

To configure the {KIE_SERVER} environment mode, set the `org.kie.server.mode` system property to `org.kie.server.mode=development` or `org.kie.server.mode=production`. To configure the deployment behavior for a corresponding project in {CENTRAL}, go to project *Settings* -> *General Settings* -> *Version* and toggle the *Development Mode* option. By default, {KIE_SERVER} and all new projects in {CENTRAL} are in development mode. You cannot deploy a project with *Development Mode* turned on or with a manually added `SNAPSHOT` version suffix to a {KIE_SERVER} that is in production mode.
====

To review project deployment details (if applicable), go to *Menu* -> *Deploy* -> *Execution Servers*.
--

